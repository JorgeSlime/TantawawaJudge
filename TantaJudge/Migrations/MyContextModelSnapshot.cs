// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace TantaJudge.Migrations
{
    [DbContext(typeof(MyContext))]
    partial class MyContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "8.0.5");

            modelBuilder.Entity("Comentario", b =>
                {
                    b.Property<int>("ComentarioId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int?>("ProblemaId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Texto")
                        .HasColumnType("TEXT");

                    b.Property<string>("Usuario")
                        .HasColumnType("TEXT");

                    b.HasKey("ComentarioId");

                    b.HasIndex("ProblemaId");

                    b.ToTable("Comentarios");
                });

            modelBuilder.Entity("Envio", b =>
                {
                    b.Property<long>("EnvioId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Codigo")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("FechaDeEnvio")
                        .HasColumnType("TEXT");

                    b.Property<int>("Lenguaje")
                        .HasColumnType("INTEGER");

                    b.Property<string>("NombreDelProblema")
                        .HasColumnType("TEXT");

                    b.Property<int>("ProblemaId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("UsuarioId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Veredicto")
                        .HasColumnType("TEXT");

                    b.HasKey("EnvioId");

                    b.HasIndex("ProblemaId");

                    b.HasIndex("UsuarioId");

                    b.ToTable("Envios");
                });

            modelBuilder.Entity("Problema", b =>
                {
                    b.Property<int>("ProblemaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Descripcion")
                        .HasColumnType("TEXT");

                    b.Property<int>("Dificultad")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Tag")
                        .HasColumnType("TEXT");

                    b.Property<string>("Titulo")
                        .HasColumnType("TEXT");

                    b.HasKey("ProblemaId");

                    b.ToTable("Problemas");
                });

            modelBuilder.Entity("Usuario", b =>
                {
                    b.Property<int>("UsuarioId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Email")
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .HasColumnType("TEXT");

                    b.Property<string>("Password")
                        .HasColumnType("TEXT");

                    b.Property<string>("ROL")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("UsuarioId");

                    b.ToTable("Usuarios");
                });

            modelBuilder.Entity("Comentario", b =>
                {
                    b.HasOne("Problema", null)
                        .WithMany("Comentarios")
                        .HasForeignKey("ProblemaId");
                });

            modelBuilder.Entity("Envio", b =>
                {
                    b.HasOne("Problema", "Problema")
                        .WithMany()
                        .HasForeignKey("ProblemaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Usuario", "Usuario")
                        .WithMany()
                        .HasForeignKey("UsuarioId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Problema");

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("Problema", b =>
                {
                    b.Navigation("Comentarios");
                });
#pragma warning restore 612, 618
        }
    }
}
